<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubeflow on Google Cloud Platform – Multi-Tenancy</title>
    <link>https://gkcalat.github.io/kubeflow-docs/docs/components/multi-tenancy/</link>
    <description>Recent content in Multi-Tenancy on Kubeflow on Google Cloud Platform</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://gkcalat.github.io/kubeflow-docs/docs/components/multi-tenancy/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Introduction to Multi-user Isolation</title>
      <link>https://gkcalat.github.io/kubeflow-docs/docs/components/multi-tenancy/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gkcalat.github.io/kubeflow-docs/docs/components/multi-tenancy/overview/</guid>
      <description>
        
        
        &lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
This Kubeflow component has &lt;b&gt;stable&lt;/b&gt; status. See the
&lt;a href=&#34;https://gkcalat.github.io/kubeflow-docs/docs/started/support/#application-status&#34;&gt;Kubeflow versioning policies&lt;/a&gt;.
&lt;/div&gt;
&lt;p&gt;In Kubeflow clusters, users often need to be isolated into a group, where a group includes one or more users.   Additionally, a user may need to belong to multiple groups.  Kubeflow’s multi-user isolation simplifies user operations because each user only views and edited\s the Kubeflow components and model artifacts defined in their configuration.  A user’s view is not cluttered by components or model artifacts that are not in their configuration. This isolation also provides for efficient infrastructure and operations i.e. a single cluster supports multiple isolated users, and does not require the administrator to operate different clusters to isolate users.&lt;/p&gt;
&lt;h2 id=&#34;key-concepts&#34;&gt;Key concepts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Administrator&lt;/strong&gt;: An Administrator is someone who creates and maintains the Kubeflow cluster. This person configures permissions (i.e. view, edit) for other users.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;User&lt;/strong&gt;: A User is someone who has access to some set of resources in the cluster. A user needs to be granted access permissions by the administrator.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Profile&lt;/strong&gt;: A Profile is a unique configuration for a user, which determines their access privileges and is defined by the Administrator.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Isolation&lt;/strong&gt;: Isolation uses Kubernetes Namespaces.  Namespaces isolate users or a group of users i.e. Bob’s namespace or ML Eng namespace that is shared by Bob and Sara.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Authentication&lt;/strong&gt;: Authentication is provided by an integration of Istio and OIDC and is secured by mTLS.  More details can be found &lt;a href=&#34;https://journal.arrikto.com/kubeflow-authentication-with-istio-dex-5eafdfac4782&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Authorization&lt;/strong&gt;: Authorization is provided by an integration with Kubernetes RBAC.&lt;/p&gt;
&lt;p&gt;Kubeflow multi-user isolation is configured by Kubeflow administrators.   Administrators configure Kubeflow User Profiles for each user.  After the configuration is created and applied, a User can only access the Kubeflow components that the Administrator has configured for them.  The configuration limits non-authorized UI users from viewing or accidentally deleting model artifacts.&lt;/p&gt;
&lt;p&gt;With multi-user isolation, Users are authenticated and authorized, and then provided with a time-based token i.e. a json web token (JWT).   The access token is carried as a web header in user requests, and authorizes the user to access the resources configured in their Profile.  The Profile configures several items including the User’s namespace(s), RBAC RoleBinding, Istio ServiceRole and ServiceRoleBindings along with Resource Quotas and Custom Plug-ins.   More information on the Profile definition and related CRD can be found &lt;a href=&#34;https://github.com/kubeflow/kubeflow/blob/master/components/profile-controller/README.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;current-integration&#34;&gt;Current integration&lt;/h2&gt;
&lt;p&gt;These Kubeflow Components can support multi-user isolation: Central Dashboard, Notebooks, Pipelines, AutoML (Katib), KFServing.  Furthermore, resources created by the notebooks (for example, training jobs and deployments) also inherit the same access.&lt;/p&gt;
&lt;p&gt;Important notes: Multi-user isolation has several configurable dependencies, especially those related to how Kubeflow is configured with the underlying Kubernetes cluster’s identity management system.   Additionally, Kubeflow multi-user isolation doesn’t provide hard security guarantees against malicious attempts to infiltrate another user’s profile.&lt;/p&gt;
&lt;p&gt;When configuring multi-user isolation along with your security and identity management requirements, it is recommended that you consult with your &lt;a href=&#34;https://www.kubeflow.org/docs/distributions/&#34;&gt;distribution provider&lt;/a&gt;.   This KubeCon &lt;a href=&#34;https://www.youtube.com/watch?v=U8yWOKOhzes&#34;&gt;presentation&lt;/a&gt; provides a detailed review of the architecture and implementation.   For on-premise deployments, Kubeflow uses Dex as a federated OpenID connection provider and can be integrated with LDAP or Active Directory to provide authentication and identity services.   This can be an advanced configuration and it is recommended that you consult with a distribution provider, or a team that provides advanced technical support for on-premise Kubeflow.&lt;/p&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Learn more about &lt;a href=&#34;https://gkcalat.github.io/kubeflow-docs/docs/components/multi-tenancy/design/&#34;&gt;multi-user isolation design&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Design for Multi-user Isolation</title>
      <link>https://gkcalat.github.io/kubeflow-docs/docs/components/multi-tenancy/design/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gkcalat.github.io/kubeflow-docs/docs/components/multi-tenancy/design/</guid>
      <description>
        
        
        &lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
This Kubeflow component has &lt;b&gt;stable&lt;/b&gt; status. See the
&lt;a href=&#34;https://gkcalat.github.io/kubeflow-docs/docs/started/support/#application-status&#34;&gt;Kubeflow versioning policies&lt;/a&gt;.
&lt;/div&gt;
&lt;h2 id=&#34;design-overview&#34;&gt;Design overview&lt;/h2&gt;
&lt;p&gt;Kubeflow multi-tenancy is currently built around &lt;em&gt;user namespaces&lt;/em&gt;.
Specifically, Kubeflow defines user-specific namespaces and uses Kubernetes
&lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&#34;&gt;role-based access control (RBAC) policies&lt;/a&gt;
to manage user access.&lt;/p&gt;
&lt;p&gt;This feature enables users to share access to their workspaces.
Workspace owners can share/revoke workspace access with other users through the
Kubeflow UI.
After being invited, users have permissions to edit the workspace and operate
Kubeflow custom resources.&lt;/p&gt;
&lt;p&gt;Kubeflow multi-tenancy is self-served - a new user can self-register to create and own
their workspace through the UI.&lt;/p&gt;
&lt;p&gt;Kubeflow uses Istio to control in-cluster traffic. By default, requests to user
workspaces are denied unless allowed by Istio RBAC. In-bound user requests are
identified using an identity provider (for example, Identity Aware Proxy (IAP) on
Google Cloud or Dex for on-premises deployments), and then validated by Istio RBAC rules.&lt;/p&gt;
&lt;p&gt;Internally, Kubeflow uses the &lt;em&gt;Profile&lt;/em&gt; custom resource to control all policies, roles, and bindings involved,
and to guarantee consistency. Kubeflow also offers a plugin interface to manage external resource/policy outside Kubernetes,
for example interfacing with Amazon Web Services APIs for identity management.&lt;/p&gt;
&lt;p&gt;The following diagram illustrates a Kubeflow multi-tenancy cluster with two user-access routes:
via the Kubeflow central dashboard and via the kubectl command-line interface (CLI).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gkcalat.github.io/kubeflow-docs/docs/images/multi-tenancy-cluster.png&#34;
alt=&#34;multi tenancy cluster &#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;feature-requirements&#34;&gt;Feature requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kubeflow uses &lt;a href=&#34;https://istio.io/&#34;&gt;Istio&lt;/a&gt; to apply access control over in-cluster traffic.&lt;/li&gt;
&lt;li&gt;Kubeflow profile controller needs &lt;code&gt;cluster admin&lt;/code&gt; permission.&lt;/li&gt;
&lt;li&gt;Kubeflow UI needs to be served behind an identity aware proxy. The identity aware proxy and Kubernetes
master should share the same identity management.&lt;/li&gt;
&lt;li&gt;The Kubeflow installation on Google Cloud uses &lt;a href=&#34;https://cloud.google.com/kubernetes-engine&#34;&gt;GKE&lt;/a&gt; and &lt;a href=&#34;https://cloud.google.com/iap/docs/concepts-overview&#34;&gt;IAP&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;On-premises installations of Kubeflow make use of &lt;a href=&#34;https://github.com/dexidp/dex&#34;&gt;Dex&lt;/a&gt;, a flexible OpenID Connect (OIDC) provider.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;supported-platforms&#34;&gt;Supported platforms&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Kubeflow multi-tenancy is enabled by default if you deploy Kubeflow on GCP with &lt;a href=&#34;https://gkcalat.github.io/kubeflow-docs/docs/gke/deploy&#34;&gt;IAP&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Learn &lt;a href=&#34;https://gkcalat.github.io/kubeflow-docs/docs/components/multi-tenancy/getting-started/&#34;&gt;how to use multi-user isolation and profiles&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Read more about &lt;a href=&#34;https://gkcalat.github.io/kubeflow-docs/docs/external-add-ons/istio/istio-in-kubeflow/&#34;&gt;Istio in Kubeflow&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Getting Started with Multi-user Isolation</title>
      <link>https://gkcalat.github.io/kubeflow-docs/docs/components/multi-tenancy/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gkcalat.github.io/kubeflow-docs/docs/components/multi-tenancy/getting-started/</guid>
      <description>
        
        
        &lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
This Kubeflow component has &lt;b&gt;stable&lt;/b&gt; status. See the
&lt;a href=&#34;https://gkcalat.github.io/kubeflow-docs/docs/started/support/#application-status&#34;&gt;Kubeflow versioning policies&lt;/a&gt;.
&lt;/div&gt;
&lt;h2 id=&#34;usage-overview&#34;&gt;Usage overview&lt;/h2&gt;
&lt;p&gt;After Kubeflow is installed and configured, you will by default
be accessing your &lt;em&gt;primary profile&lt;/em&gt;. A &lt;em&gt;profile&lt;/em&gt; owns a Kubernetes namespace of
the same name along with a collection of Kubernetes resources. Users have view
and modify access to their primary profiles. You can share
access to your profile with another user in the system. When sharing the access
to a profile with another user, you can choose to whether to provide only read access or read/modify
access. For all practical purposes when working
through the Kubeflow central dashboard, the active namespace is directly tied
with the active profile.&lt;/p&gt;
&lt;h2 id=&#34;example-of-usage&#34;&gt;Example of usage&lt;/h2&gt;
&lt;p&gt;You can select your active profile from the top bar on the Kubeflow central
dashboard.  Note that you can only see the profiles
to which you have view or modify access.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gkcalat.github.io/kubeflow-docs/docs/images/select-profile.png&#34;
alt=&#34;Select active profile &#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;p&gt;This guide illustrates the user isolation functionality using the Jupyter
notebooks service which is the first service in the system to have full
integration with the multi-user isolation functionality.&lt;/p&gt;
&lt;p&gt;After you select an active profile, the Notebooks Servers UI
displays only the active notebook servers in the currently selected
profile. All other notebook servers remain hidden from you. If you switch
the active profile, the view switches the list of active notebooks
appropriately. You can connect to any of the listed notebook servers and
view and modify the existing Jupyter notebooks available in the server.&lt;/p&gt;
&lt;p&gt;For example, the following image shows the list of notebook servers available
in a user&amp;rsquo;s primary profile:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gkcalat.github.io/kubeflow-docs/docs/images/notebooks-in-profile.png&#34;
alt=&#34;List of notebooks in active profile &#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;p&gt;When an unauthorized user accesses the notebooks in this profile, they see an
error:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gkcalat.github.io/kubeflow-docs/docs/images/notebook-access-error.png&#34;
alt=&#34;Error listing notebooks in inacessible profile&#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;p&gt;When you create Jupyter notebook servers from the Notebooks Servers UI,
the notebook pods are created in your active profile. If you don&amp;rsquo;t have
modify access to the active profile, you can only browse currently active
notebook servers and access the existing notebooks but cannot create
new notebook servers in that profile. You can create notebook
servers in your primary profile which you have view and modify access to.&lt;/p&gt;
&lt;h2 id=&#34;onboarding-a-new-user&#34;&gt;Onboarding a new user&lt;/h2&gt;
&lt;p&gt;An &lt;strong&gt;administrator&lt;/strong&gt; can manually create a profile for any user in the Kubeflow cluster.
Here an administrator is a person who has &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles&#34;&gt;&lt;em&gt;cluster-admin&lt;/em&gt;&lt;/a&gt;
role binding in the Kubernetes cluster. This person has permissions to create
and modify Kubernetes resources in the cluster. For example, the person who
deployed Kubeflow will have administration privileges in the cluster.&lt;/p&gt;
&lt;p&gt;We recommend this approach, since it encourages the adoption of GitOps processes for handling the Profile creation.&lt;/p&gt;
&lt;p&gt;Kubeflow v1.6.0 optionally provides automatic Profile creation workflow for authenticated users on first login.&lt;/p&gt;
&lt;h3 id=&#34;pre-requisites-grant-user-minimal-kubernetes-cluster-access&#34;&gt;Pre-requisites: grant user minimal Kubernetes cluster access&lt;/h3&gt;
&lt;p&gt;You must grant each user the minimal permission scope that allows them to
connect to the Kubernetes cluster.&lt;/p&gt;
&lt;p&gt;For example, for Google Cloud users, you should grant the
following Cloud Identity and Access Management (IAM) roles. In the following
commands, replace &lt;code&gt;[PROJECT]&lt;/code&gt; with your Google Cloud project and replace &lt;code&gt;[EMAIL]&lt;/code&gt; with
the user&amp;rsquo;s email address:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To access the Kubernetes cluster, the user needs the &lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/how-to/iam&#34;&gt;Kubernetes Engine
Cluster Viewer&lt;/a&gt;
role:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud projects add-iam-policy-binding [PROJECT] --member=user:[EMAIL] --role=roles/container.clusterViewer
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To access the Kubeflow UI through IAP, the user needs the
&lt;a href=&#34;https://cloud.google.com/iap/docs/managing-access&#34;&gt;IAP-secured Web App User&lt;/a&gt;
role:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud projects add-iam-policy-binding [PROJECT] --member=user:[EMAIL] --role=roles/iap.httpsResourceAccessor
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; you need to grant the user &lt;code&gt;IAP-secured Web App User&lt;/code&gt; role even if the user is already an owner or editor of the project. &lt;code&gt;IAP-secured Web App User&lt;/code&gt; role is not implied by just &lt;code&gt;Project Owner&lt;/code&gt; or &lt;code&gt;Project Editor&lt;/code&gt; roles.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To be able to run &lt;code&gt;gcloud get credentials&lt;/code&gt; and see logs in Cloud Logging
(formerly Stackdriver), the user needs viewer access on the project:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gcloud projects add-iam-policy-binding [PROJECT] --member=user:[EMAIL] --role=roles/viewer
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;manual-profile-creation&#34;&gt;Manual profile creation&lt;/h3&gt;
&lt;p&gt;An administrator can manually create profiles for users as described below.&lt;/p&gt;
&lt;p&gt;Create a
&lt;code&gt;profile.yaml&lt;/code&gt; file with the following content on your local machine:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apiVersion: kubeflow.org/v1beta1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kind: Profile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  name: profileName   # replace with the name of profile you want, this will be user&amp;#39;s namespace name
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spec:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  owner:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    kind: User
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    name: userid@email.com   # replace with the email of the user
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  resourceQuotaSpec:    # resource quota can be set optionally
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   hard:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     cpu: &amp;#34;2&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     memory: 2Gi
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     requests.nvidia.com/gpu: &amp;#34;1&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     persistentvolumeclaims: &amp;#34;1&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     requests.storage: &amp;#34;5Gi&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run the following command to create the corresponding profile resource:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create -f profile.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f profile.yaml  #if you are modifying the profile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above command creates a profile named &lt;em&gt;profileName&lt;/em&gt;. The profile owner is
&lt;em&gt;&lt;a href=&#34;mailto:userid@email.com&#34;&gt;userid@email.com&lt;/a&gt;&lt;/em&gt; and has view and modify access to that profile.
The following resources are created as part of the profile creation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A Kubernetes namespace that shares the same name with the corresponding
profile.&lt;/li&gt;
&lt;li&gt;Kubernetes RBAC (&lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/rbac/&#34;&gt;Role-based access control&lt;/a&gt;)
role binding role binding for the namespace: &lt;em&gt;Admin&lt;/em&gt;. This makes the
profile owner the namespace administrator, thus giving them access to the
namespace using kubectl (via the Kubernetes API).&lt;/li&gt;
&lt;li&gt;Istio namespace-scoped AuthorizationPolicy: &lt;em&gt;user-userid-email-com-clusterrole-edit&lt;/em&gt;.
This allows the &lt;code&gt;user&lt;/code&gt; to access data belonging to the namespace the AuthorizationPolicy was created in&lt;/li&gt;
&lt;li&gt;Namespace-scoped service-accounts &lt;em&gt;default-editor&lt;/em&gt; and &lt;em&gt;default-viewer&lt;/em&gt; to be used by
user-created pods in the namespace.&lt;/li&gt;
&lt;li&gt;Namespace scoped resource quota limits will be placed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Due to a one-to-one correspondence of profiles with Kubernetes
namespaces, the terms &lt;em&gt;profile&lt;/em&gt; and &lt;em&gt;namespace&lt;/em&gt; are sometimes used interchangeably in the
documentation.&lt;/p&gt;
&lt;h3 id=&#34;batch-creation-of-user-profiles&#34;&gt;Batch creation of user profiles&lt;/h3&gt;
&lt;p&gt;Administrators might want to create profiles for multiple users as a batch. You can
do this by creating a &lt;code&gt;profile.yaml&lt;/code&gt; on the local machine with multiple sections of
profile descriptions as shown below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apiVersion: kubeflow.org/v1beta1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kind: Profile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  name: profileName1   # replace with the name of profile you want
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spec:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  owner:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    kind: User
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    name: userid1@email.com   # replace with the email of the user
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apiVersion: kubeflow.org/v1beta1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kind: Profile
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  name: profileName2   # replace with the name of profile you want
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spec:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  owner:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    kind: User
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    name: userid2@email.com   # replace with the email of the user
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run the following command to apply the namespaces to the Kubernetes cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create -f profile.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f profile.yaml  #if you are modifying the profiles
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will create multiple profiles, one for each individual listed in the sections
in &lt;code&gt;profile.yaml&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;automatic-profile-creation&#34;&gt;Automatic profile creation&lt;/h3&gt;
&lt;p&gt;Kubeflow v1.6.0 provides automatic profile creation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Automatic profile creation is not activated by default, and needs to be explicitly included as part of deployment. After turning on automatic user profile creation during deployment, a new user profile is created for authenticated users on their first login. Users will be able to see their new profile in the dropdown list of the Kubeflow central dashboard.&lt;/li&gt;
&lt;li&gt;The automatic profile creation can be enabled as part of the deployment by setting the &lt;code&gt;CD_REGISTRATION_FLOW&lt;/code&gt; env variable to &lt;code&gt;true&lt;/code&gt;. Modify the &lt;code&gt;&amp;lt;manifests-path&amp;gt;/apps/centraldashboard/upstream/base/params.env&lt;/code&gt; to set the registration variable to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CD_CLUSTER_DOMAIN=cluster.local
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CD_USERID_HEADER=kubeflow-userid
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CD_USERID_PREFIX=
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CD_REGISTRATION_FLOW=true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;When an authenticated user logs into the system and visits the central
dashboard for the first time, they trigger a profile creation automatically.
&lt;ul&gt;
&lt;li&gt;A brief message introduces profiles: &lt;img
src=&#34;https://gkcalat.github.io/kubeflow-docs/docs/images/auto-profile1.png&#34; alt=&#34;Automatic profile creation
step 1&#34; class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/li&gt;
&lt;li&gt;The user can name their profile and click &lt;em&gt;Finish&lt;/em&gt;:  &lt;img
src=&#34;https://gkcalat.github.io/kubeflow-docs/docs/images/auto-profile2.png&#34; alt=&#34;Automatic profile creation
step 2&#34; class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/li&gt;
&lt;li&gt;This redirects the user to the dashboard where they can view and select
their profile in the dropdown list.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;listing-and-describing-profiles&#34;&gt;Listing and describing profiles&lt;/h2&gt;
&lt;p&gt;An administrator can list the existing profiles in the system:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get profiles
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and describe a specific profile using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl describe profile profileName
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;deleting-an-existing-profile&#34;&gt;Deleting an existing profile&lt;/h2&gt;
&lt;p&gt;An administrator can delete an existing profile using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl delete profile profileName
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will delete the profile, the corresponding namespace and any Kubernetes
resources associated with the profile. The profile&amp;rsquo;s owner or other users with
access to the profile will no longer have access to the profile and will not see
it in the dropdown list on the central dashboard.&lt;/p&gt;
&lt;h2 id=&#34;managing-contributors-through-the-kubeflow-ui&#34;&gt;Managing contributors through the Kubeflow UI&lt;/h2&gt;
&lt;p&gt;Kubeflow v1.6.0 allows sharing of profiles with other users in the
system.  An owner of a profile can share access to their profile using the
&lt;strong&gt;Manage Contributors&lt;/strong&gt; tab available through the dashboard.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gkcalat.github.io/kubeflow-docs/docs/images/multi-user-contributors.png&#34;
alt=&#34;Manage Contributors in Profiles&#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here is an example of the Manage Contributors tab view:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gkcalat.github.io/kubeflow-docs/docs/images/manage-contributors.png&#34;
alt=&#34;Manage Contributors in Profiles&#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;p&gt;Notice that in the above view the account associated with the profile is a
cluster administrator (&lt;em&gt;Cluster Admin&lt;/em&gt;)
as this account was used to deploy Kubeflow. The view lists the
profiles accessible to the user along with the role associated with that
profile.&lt;/p&gt;
&lt;p&gt;To add or remove a contributor, add/remove the
email address or the user identifier in the &lt;strong&gt;Contributors to your namespace&lt;/strong&gt; field.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gkcalat.github.io/kubeflow-docs/docs/images/add-contributors.png&#34;
alt=&#34;Add Contributors&#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;p&gt;The Manage Contributors tab shows the contributors that the namespace owner has
added. Note that the cluster administrator can view all the
profiles in the system along with their contributors.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gkcalat.github.io/kubeflow-docs/docs/images/view-contributors.png&#34;
alt=&#34;View Contributors&#34;
class=&#34;mt-3 mb-3 border border-info rounded&#34;&gt;&lt;/p&gt;
&lt;p&gt;The contributors have access to all the Kubernetes resources in the
namespace and can create notebook servers as well as access
existing notebooks.&lt;/p&gt;
&lt;h2 id=&#34;managing-contributors-manually&#34;&gt;Managing contributors manually&lt;/h2&gt;
&lt;p&gt;An administrator can manually add contributors to an existing profile as described below.&lt;/p&gt;
&lt;p&gt;Create a rolebinding.yaml file with the following content on your local machine:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apiVersion: rbac.authorization.k8s.io/v1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kind: RoleBinding
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  annotations:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    role: edit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    user: userid@email.com   # replace with the email of the user from your Active Directory case sensitive
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  name: user-userid-email-com-clusterrole-edit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # Ex: if the user email is lalith.vaka@kp.org the name should be user-lalith-vaka-kp-org-clusterrole-edit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  # Note: if the user email is Lalith.Vaka@kp.org from your Active Directory, the name should be user-lalith-vaka-kp-org-clusterrole-edit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  namespace: profileName # replace with the namespace/profile name that you are adding contributors to
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;roleRef:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  apiGroup: rbac.authorization.k8s.io
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  kind: ClusterRole
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  name: kubeflow-edit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;subjects:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- apiGroup: rbac.authorization.k8s.io
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  kind: User
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  name: userid@email.com   # replace with the email of the user from your Active Directory case sensitive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create an authorizationpolicy.yaml file with the following content on your local machine:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apiVersion: security.istio.io/v1beta1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kind: AuthorizationPolicy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  annotations:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    role: edit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    user: userid@email.com # replace with the email of the user from your Active Directory case sensitive
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  name: user-userid-email-com-clusterrole-edit
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  namespace: profileName # replace with the namespace/profile name that you are adding contributors to
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spec:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  action: ALLOW
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  rules:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  - when:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    - key: request.headers[kubeflow-userid] # for GCP, use x-goog-authenticated-user-email instead of kubeflow-userid for authentication purpose
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      values:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      - accounts.google.com:userid@email.com   # replace with the email of the user from your Active Directory case sensitive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run the following command to create the corresponding contributor resources:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create -f rolebinding.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create -f authorizationpolicy.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above command adds a contributor &lt;em&gt;&lt;a href=&#34;mailto:userid@email.com&#34;&gt;userid@email.com&lt;/a&gt;&lt;/em&gt; to the profile named &lt;em&gt;profileName&lt;/em&gt;. The contributor
&lt;em&gt;&lt;a href=&#34;mailto:userid@email.com&#34;&gt;userid@email.com&lt;/a&gt;&lt;/em&gt; has view and modify access to that profile.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
